name: "Terraform Apply and Deploy"

on:
  workflow_call:
    inputs:
      workspace:
        required: true
        type: string
      deploy_env:
        required: true
        type: string

jobs:
  terraform_apply:
    runs-on: ubuntu-latest
    outputs:
      public_ip: ${{ steps.save_outputs.outputs.public_ip }}
      user: ${{ steps.save_outputs.outputs.user }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Init
        run: terraform init

      - name: Terraform Workspace
        run: |
          terraform workspace select ${{ inputs.workspace }} || terraform workspace new ${{ inputs.workspace }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Save Terraform Outputs
        id: save_outputs
        run: |
          public_ip=$(terraform output -raw public_ip)
          echo "public_ip=$public_ip" >> "$GITHUB_OUTPUT"
          echo "user=ubuntu" >> "$GITHUB_OUTPUT"

  deploy:
    runs-on: ubuntu-latest
    needs: terraform_apply
    env:
      TF_VAR_ssh_public_key: "${{ secrets.SSH_PUBLIC_KEY }}"
      AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
      AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
    environment:
      name: ${{ inputs.deploy_env }}
      url: http://${{ needs.terraform_apply.outputs.public_ip }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Install Ansible roles
        run: ansible-galaxy install -r requirements.yml

      - name: Create inventory
        run: |
          echo "[ec2]" > inventory.ini
          echo "${{ needs.terraform_apply.outputs.public_ip }} ansible_user=${{ needs.terraform_apply.outputs.user }} ansible_ssh_extra_args='-o StrictHostKeyChecking=no'" >> inventory.ini

      - name: Run Playbook
        run: ansible-playbook -i inventory.ini cloud-app.yml --private-key ~/.ssh/id_ed25519
