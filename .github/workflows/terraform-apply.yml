name: "Terraform Apply and Deploy"

on:
  push:
    branches:
      - master

env:
  TF_CLOUD_ORGANIZATION: "Taubel"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "prod"
  TF_VAR_ssh_public_key: "${{ secrets.SSH_PUBLIC_KEY }}"
  CONFIG_DIRECTORY: "./"
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"

jobs:
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      public_ip: ${{ steps.save_output.outputs.public_ip }}
      user: ${{ steps.save_output.outputs.user }}
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

#      - name: Download Terraform Plan
#        uses: actions/download-artifact@v4
#        with:
#          name: tfplan

      - name: Terraform Init
        run: terraform init

      - name: Terraform Refresh
        run: terraform refresh

      - name: Terraform Apply
        run: terraform apply -auto-approve
#        run: terraform apply -auto-approve tfplan

      - name: Save Outputs
        id: save_output
        run: |
          public_ip=$(terraform output -raw public_ip)
          echo "public_ip=$public_ip" >> "$GITHUB_OUTPUT"
          echo "user=ubuntu" >> "$GITHUB_OUTPUT"

  deploy:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Install Ansible roles
        run: |
          ansible-galaxy install -r requirements.yml

      - name: Create inventory
        run: |
          echo "[ec2]" > inventory.ini
          echo "${{ needs.terraform.outputs.public_ip }} ansible_user=${{ needs.terraform.outputs.user }} ansible_ssh_extra_args='-o StrictHostKeyChecking=no'" >> inventory.ini

      - name: Run Playbook
        run: |
          ansible-playbook -i inventory.ini cloud-app.yml --private-key ~/.ssh/id_ed25519
